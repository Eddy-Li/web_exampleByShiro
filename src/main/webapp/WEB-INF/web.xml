<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

    <display-name>hello world</display-name>


    <!--配置spring IOC配置文件路径-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <!--配置ContextLoaderListener用以初始化 Spring IOC容器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--========================================shiro================================================================-->
    <!-- shiro过虑器，DelegatingFilterProx会从spring容器中找shiroFilter -->
    <!--<filter-name>shiroFilter</filter-name>要与spring-shiro.xml中org.apache.shiro.spring.web.ShiroFilterFactoryBean定义的id相同-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--========================================DispatcherServlet====================================================-->
    <!--配置DispatcherServlet-->
    <!--spring mvc框架会根据servlet-name配置，找到/WEB-INF/dispatcher-Servlet.xml作为配置文件载入web工程中-->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--使得dispatcherServlet在服务器启动的时候就初始化-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <!--<url-pattern>*.do</url-pattern>-->
        <!--springmvc拦截所有请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--设置默认首页-->
    <welcome-file-list>
        <welcome-file>hello.html</welcome-file>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>default.html</welcome-file>
        <welcome-file>default.htm</welcome-file>
        <welcome-file>default.jsp</welcome-file>
    </welcome-file-list>
    <!-- 配置 无法找到页面时的跳转页面-->
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/views/noPage.html</location>
    </error-page>

</web-app>
